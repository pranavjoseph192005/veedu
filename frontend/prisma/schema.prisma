generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  uid       String   @unique
  email     String   @unique
  firstName String
  lastName  String
  createdAt DateTime @default(now())
  firstLoginComplete Boolean @default(false)
  houses    House[]
  tickets   Ticket[]
  profile       UserProfile?
}

model UserProfile {
  id             Int      @id @default(autoincrement())
  userId         Int      @unique
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  savings        Int?     // Amount saved for investing ($)
  income         Int?     // Monthly income ($)
  monthlyDebts   Int?
  targetState    String?  // e.g. "Texas"
  targetCity     String?  // e.g. "Austin"
  goal           String?  // "cash flow", "appreciation", etc.
  experience     String?  // "first-time", "own 1 rental", etc.
  creditScore    String?
  living         String?
  lowLoanAmount  Int?
  meanLoanAmount Int?
  highLoanAmount Int?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model House {
  id        Int      @id @default(autoincrement())
  address   String   
  city      String
  state     String
  zip       String
  @@unique([address, city, state, zip]) // Combination must be unique
  propertyType String?
  purchasePrice Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  owner     User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId   Int
  tickets   Ticket[]
}

model Ticket {
  id        Int      @id @default(autoincrement())
  description String
  status    String   @default("open") // e.g., open, in_progress, closed
  createdAt DateTime @default(now())
  owner     User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId   Int
  house     House    @relation(fields: [houseId], references: [id], onDelete: Cascade)
  houseId   Int
}

